/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
  // Apply the application plugin to add support for building a CLI application in Java.
  id 'application'
  id 'jacoco'
  id "com.github.spotbugs" version "4.7.3"
}

repositories {
  // Use Maven Central for resolving dependencies.
  mavenCentral()
}

spotbugs {
  toolVersion = '4.7.3'
}

dependencies {
  testCompileOnly 'junit:junit:4.11'
  testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.8.1'
  // These dependencies are used for log4j
  implementation "org.apache.logging.log4j:log4j-api:2.5"
  implementation "org.apache.logging.log4j:log4j-core:2.5"
  // spotbugs-findsecbugs
  spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.12.0'
}

application {
  // Define the main class for the application.
  mainClass = '{{ cookiecutter.module_name }}.App'
}

tasks.named('test') {
  // Use TestNG for unit tests.
  useTestNG()
}

jacocoTestReport {
   reports {
      xml.enabled = true
      html.enabled = true
   }
}

jar {
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
  manifest {
    attributes "Main-Class": '{{ cookiecutter.module_name }}.App'
  }
  from {
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

spotbugs {
    toolVersion = '4.7.3'
    ignoreFailures = false
    effort = 'max'
    showProgress = true
}

version = "{{ cookiecutter.version }}"
